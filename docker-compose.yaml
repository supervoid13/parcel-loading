services:
  app:
    container_name: app_container
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://db:5432/${DB_NAME}"
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      DATA_SOURCE_URL: ${DATA_SOURCE_URL}
    restart: always
    networks:
      - loading_service_network

  db:
    container_name: db_container
    image: postgres:15.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    networks:
      - loading_service_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s

networks:
  loading_service_network:
    name: loading_service_network
volumes:
  postgres_data: